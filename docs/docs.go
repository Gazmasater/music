// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info": {
            "get": {
                "description": "Returns general information about the API, including title and version.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Get API Information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "description": "Получение списка песен с поддержкой фильтрации и пагинации.",
                "tags": [
                    "songs"
                ],
                "summary": "Получить список песен",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поле для фильтрации (song_name, artist_name, release_date)",
                        "name": "field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Значение для фильтрации",
                        "name": "value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение списка песен",
                        "schema": {
                            "$ref": "#/definitions/models.SongsResponse"
                        }
                    },
                    "400": {
                        "description": "Неверное поле для фильтрации"
                    },
                    "500": {
                        "description": "Ошибка на сервере"
                    }
                }
            },
            "post": {
                "description": "Добавляет новую песню к исполнителю. Если исполнитель не существует, он будет создан.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Добавить новую песню",
                "parameters": [
                    {
                        "description": "Информация о песне",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SongInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно добавлена новая песня",
                        "schema": {
                            "$ref": "#/definitions/models.SongDetail"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Песня уже существует",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs/{songName}": {
            "put": {
                "description": "Обновляет данные существующей песни по имени. Поля, которые не переданы, останутся без изменений.",
                "summary": "Изменение данных песни",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя песни для обновления",
                        "name": "songName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленные данные песни. Все поля являются необязательными.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SongUpdateResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление песни",
                        "schema": {
                            "$ref": "#/definitions/models.SongUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "404": {
                        "description": "Песня не найдена"
                    },
                    "500": {
                        "description": "Ошибка при обновлении песни"
                    }
                }
            },
            "delete": {
                "summary": "Удалить песню",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя песни для удаления",
                        "name": "songName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление"
                    },
                    "404": {
                        "description": "Песня не найдена"
                    },
                    "500": {
                        "description": "Ошибка при удалении песни"
                    }
                }
            }
        },
        "/songs/{songName}/lyrics": {
            "get": {
                "summary": "Получение текста песни с пагинацией по куплетам",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя песни для получения текста",
                        "name": "songName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы куплетов",
                        "name": "verse_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 3,
                        "description": "Количество куплетов на странице",
                        "name": "verse_limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное получение текста песни",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedLyricsRespons"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос"
                    },
                    "404": {
                        "description": "Песня не найдена"
                    },
                    "500": {
                        "description": "Ошибка при получении текста песни"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.PaginatedLyricsRespons": {
            "type": "object",
            "properties": {
                "song_name": {
                    "description": "Название песни",
                    "type": "string"
                },
                "total_verses": {
                    "description": "Общее количество куплетов",
                    "type": "integer"
                },
                "verse_limit": {
                    "description": "Количество куплетов на странице",
                    "type": "integer"
                },
                "verse_page": {
                    "description": "Номер страницы куплетов",
                    "type": "integer"
                },
                "verses": {
                    "description": "Пагинированные куплеты",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SongDetail": {
            "type": "object",
            "properties": {
                "artistID": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "releaseDate": {
                    "type": "string"
                },
                "songName": {
                    "type": "string"
                },
                "songURL": {
                    "description": "Убедитесь, что это поле присутствует",
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.SongInput": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "models.SongText": {
            "type": "object",
            "properties": {
                "verses": {
                    "description": "Срез для хранения куплетов",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.SongUpdateResponse": {
            "description": "Структура ответа после обновления песни",
            "type": "object",
            "properties": {
                "artist_name": {
                    "description": "Имя исполнителя",
                    "type": "string",
                    "example": "Исполнитель"
                },
                "group_link": {
                    "description": "Ссылка на группу",
                    "type": "string",
                    "example": "http://example.com"
                },
                "release_date": {
                    "description": "Укажите формат даты в Swagger",
                    "type": "string",
                    "format": "date",
                    "example": "1985.02.05"
                },
                "song_name": {
                    "description": "Название песни",
                    "type": "string",
                    "example": "Название песни"
                },
                "text": {
                    "description": "Текст песни",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SongText"
                        }
                    ]
                }
            }
        },
        "models.SongsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SongDetail"
                    }
                },
                "total_items": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Music API",
	Description:      "Это API для работы с музыкальной библиотекой, позволяющее получать, добавлять, обновлять и удалять песни.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
